@attribute [StreamRendering]
@rendermode @(new InteractiveServerRenderMode (prerender: false))
@page "/employee"
@using System.ComponentModel.DataAnnotations

<h3>Employee</h3>
@if (!_isSubmitted)
{
    <EditForm Model="Worker" OnValidSubmit="@OnSubmit">
        <DataAnnotationsValidator />
       @*  <ValidationSummary /> *@
        <div class="label-group">
            <label for="firstName">First Name</label>
            <InputText id="firstName" class="form-control" @bind-Value="Worker.FirstName" />
            <ValidationMessage For="@(() => Worker.FirstName)" />
        </div>
        <div class="label-group">
            <label for="lastName">Last Name</label>
            <InputText id="lastName" class="form-control" @bind-Value="Worker.LastName" />
            <ValidationMessage For="@(() => Worker.LastName)" />
        </div>
        <div class="label-group">
            <label for="dateOfBirth">Data of Birth</label>
            <InputDate id="dateOfBirth" class="form-control" @bind-Value="Worker.DateOfBirth" />
            <ValidationMessage For="@(() => Worker.DateOfBirth)" />
        </div>
        <div class="label-group">
            <label for="salary">Salary</label>
            <InputNumber id="salary" class="form-control" @bind-Value="Worker.Salary" />
            <ValidationMessage For="@(() => Worker.Salary)" />
        </div>
        <div style="margin-top:15px">
            <button class="btn btn-primary" type="submit">Save Employee</button>
            <button class="btn btn-secondary" style="margin-left: 5px" type="reset">Reset</button>
        </div>
    </EditForm>
}
else
{
    <div style="margin-bottom: 15px">The new employee has been added.</div>
    <div>
        <b>@Worker.FirstName @Worker.LastName</b><br />
        @Worker.DateOfBirth.ToShortDateString() <br />
        @Worker.Salary.ToString("C")
    </div>
}
@code {
    private bool _isSubmitted = false;
    public void OnSubmit()
    {
        // Handle form submission logic here
        _isSubmitted = true;
    }

    public Person Worker = new Person();

    public class Person
    {
        [Required]
        [StringLength(20, MinimumLength = 4, ErrorMessage = "First name must be between 4 and 20 characters.")]
        public string? FirstName { get; set; }
        [Required]
        [StringLength(50, MinimumLength = 4, ErrorMessage = "Last name must be between 4 and 50 characters.")]
        public string? LastName { get; set; }
        [Required]
        [DataType(DataType.Date), DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
        public DateOnly DateOfBirth { get; set; }
        [Required]
        [Range(10000, 100000, ErrorMessage = "Salary must be between 10,000 and 100,000.")]
        public decimal Salary { get; set; }
    }
}
